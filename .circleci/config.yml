version: 2.1

parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""

orbs:
  slack: circleci/slack@4.4.4

jobs:
  build:
    docker:
    - image: ubuntu:jammy
    environment:
      BUNDLE_PATH: ~/repo/vendor/bundle
    steps:
    - checkout
    - restore_cache:
        keys:
        - rubygems-v1-{{ checksum "Gemfile.lock" }}
        - rubygems-v1-fallback
    - run:
        name: Install ruby, helm, az
        command: |
          sudo apt-get update
          sudo apt-get install ruby-full build-essential zlib1g-dev -y
          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm -y
          sudo mkdir -p /etc/apt/keyrings
          curl -sLS https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/keyrings/microsoft.gpg > /dev/null
          sudo chmod go+r /etc/apt/keyrings/microsoft.gpg
          AZ_DIST=$(lsb_release -cs) && echo "deb [arch=`dpkg --print-architecture` signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/azure-cli/ $AZ_DIST main" | sudo tee /etc/apt/sources.list.d/azure-cli.list
          sudo apt-get update
          sudo apt-get install azure-cli -y
    - run:
        name: Bundle Install jekyll and deps
        command: |
          sudo gem install bundler jekyll
          sudo bundle update
    - save_cache:
        key: rubygems-v1-{{ checksum "Gemfile.lock" }}
        paths:
        - vendor/bundle
    - run:
        name: Jekyll build
        command: |
          jekyll doctor
          jekyll build
    - run:
        name: prepare azure
        command: |
          az login --service-principal --tenant ${AZURE_SP_TENANT} -u ${AZURE_CLIENT_ID} -p ${AZURE_SECRET}
          az aks get-credentials -g ${RESOURCE_GROUP} -n ${RESOURCE_GROUP}
          kubectl config set-cluster ${RESOURCE_GROUP}
          kubectl config use-context ${RESOURCE_GROUP}
    - run:
        name: update preview
        command: |
          NAME="preview-molgenis-org-pr-${CIRCLE_PULL_REQUEST##*/}"
          echo "${NAME}"
          helm repo add onechart https://chart.onechart.dev
          helm template my-release onechart/onechart \
            --set image.repository=nginx \
            --set image.tag=1.19.3 \
            --set ingress.host=${NAME}.dev.molgenis.org/
          kubectl create namespace ${NAME}
          kubectl create secret tls "dev.molgenis.org" --key /tmp/cert_key --cert /tmp/cert_pem -n ${NAME}
          helm upgrade --install ${NAME} ./helm-chart --namespace ${NAME}
workflows:
  version: 2
  build:
    jobs:
    - build
